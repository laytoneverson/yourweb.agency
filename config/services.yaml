# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    env(APP_SECRET): KL873243298JSKJFOEPJIJOJ7856JHFSDHUIUHFSIUE
    env(DOMAIN_CRYPTOCURRENCY): YourWeb.Money
    env(DOMAIN_HOME): yourweb.online
    env(DOMAIN_STORAGE): cloudstorage.yourweb.online

    domain_cryptocurrency: '%env(DOMAIN_CRYPTOCURRENCY)%'
    domain_home: '%env(DOMAIN_HOME)%'
    domain_storage: '%env(DOMAIN_STORAGE)%'
    locale: 'en'
    router.request_context.host: yourweb.money
    router.request_context.scheme: https

    review-site-statuses:
        GOOD_STANDING: 'Good Standing'
        PENDING_VERIFICATION: 'Pending Verification'
        OFFLINE_TEMPORARY: 'Offline - Temporary '
        USE_CAUTION: 'Use Caution'
        OFFLINE_PERMANENT: 'Offline - Indefinite'
        SCAM_ALERT: 'CONFIRMED_SCAM'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests}'

    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Service\AssetStorage\AlibabaBucketStorage: ~
    App\Service\AssetStorage\FileStorageInterface: '@App\Service\AssetStorage\AlibabaBucketStorage'

    App\Service\WebsiteClipperService\ScreenshotLayerApi: ~
    App\Service\WebsiteClipperService\WebsiteClipperInterface: '@App\Service\WebsiteClipperService\ScreenshotLayerApi'

    gedmo.listener.sluggable:
        class: Gedmo\Sluggable\SluggableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    gedmo.listener.timestampable:
        class: Gedmo\Timestampable\TimestampableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    gedmo.listener.sortable:
        class: Gedmo\Sortable\SortableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    gedmo.listener.softdeleteable:
        class: Gedmo\SoftDeleteable\SoftDeleteableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    app.sitemap.blog_post_subscriber:
        class: App\EventSubscriber\SitemapSubscriber
        arguments:
            - "@router"
            - "@doctrine"
            - '@App\Service\CryptoCurrencySiteService'
        tags:
            - { name: "kernel.event_subscriber", priority: 100 }
