version: '3'

services:

  builder:
    image: yourweb-build
    build:
      context: ./
      dockerfile: Dockerfile-Builder
      args:
        - APP_ENV=${APP_ENV}
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - APP_ENV=${APP_ENV}

  php:
    image: yourweb-dev-php
    build:
      context: ./docker
      dockerfile: Dockerfile-Php
      args:
        - APP_ENV=dev
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - APP_ENV=dev
    volumes:
      - ./:/var/www/app
    networks:
      - backend

  web:
    build:
      context: ./docker
      dockerfile: Dockerfile-Web
      args:
        - APP_ENV=dev
        - PHP_UPSTREAM_CONTAINER=php
        - PHP_UPSTREAM_PORT=9000
        - APP_SECRET=B1Yl3btHpeVEC5XHRDdLVGXJrrm8GVzJOMivXgiN
        - MYSQL_USER=yourweb
        - MYSQL_PASSWORD=yourweb
        - MYSQL_HOST=db
        - MYSQL_DATABASE=yourwebdb
    image: yourweb-dev-web
    environment:
      - DEVELOPMENT_MODE=false
      - WEB_HTTP=true
    volumes:
      - ./:/var/www/app
      - ./docker/dev/nginx/certs:/etc/nginx/certs
      - ./docker/dev/nginx/sites:/etc/nginx/sites-available
      - ./var/logs/nginx:/var/log/nginx
    ports:
      - 80:80
      - 443:443
    networks:
      - backend
      - frontend

  db:
    image: yourweb-dev-db:latest
    build:
      context: ./docker/mysql
      dockerfile: Dockerfile
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - mysqldev:/var/lib/mysql
      - ./docker/mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - backend

networks:
  frontend:
    driver: "bridge"
  backend:
    driver: "bridge"

volumes:
  datavolume:
    driver: "local"
  mysqldev:
    driver: "local"
  mysqlprod:
    driver: "local"
